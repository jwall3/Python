#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jul 10 14:51:27 2019

@author: joe
"""
###############################################################################
def fm():
    global qy
    global qx
    qy = []
    qx = []
    
    f = open ("RAMAPLOT.csv", "r")

    for line in f:
        data = f.readlines()
        x = 0
        for n in data:
            q1 = data[x].split(",")
            x+=1
            qx.append(q1[0])
            qy.append(q1[1])
###############################################################################

##############################################################################
#l is number in the list, i is column, 
def fs(l,i):
    global h

    f = open ("rama_ic.xvg", "r")

    for line in f:
        data = f.readlines()
    
    h = []
    v = 0
    while v < l:
        if i<2:
            
            dx = data[v].split()
            h.append(float(dx[i]))
            #^for columns 0 and 1
            v+=1
        else:
            dx = data[v].split()
            h.append(dx[i])
            #^for columns 2
            #print(dx[0])
            v+=1
    #print(h)
    #print(h[0])    
##############################################################################
#FILE LENGHT#

def file_len(fname):
    with open(fname) as f:
        for i, l in enumerate(f):
            pass
    print(i + 1)
##############################################################################
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import gaussian_kde

#STRIP DATA#
file_len("rama_ic.xvg")

fs(40080,0)
f1 = np.array(h)

fs(40080,1)
f2 = np.array(h)

fs(40080,2)

f3 = np.array(h)

print("h",h[0])
print("f1",f1[0])
print("f2",f2[0])
print("f3",f3[0])


##############################################################################
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import numpy as np

img=mpimg.imread("ramaplott.jpg")

imgplot = plt.imshow(img)
print(img.shape)
###############################################################################

x = f1
y = f2

# Calculate the point density
xy = np.vstack([2*x,2*y])
z = gaussian_kde(xy)(xy)

# Sort the points by density, so that the densest points are plotted last
idx = z.argsort()
x, y, z = x[idx], y[idx], z[idx]

fig, ax = plt.subplots()
ax.scatter(x, y,c=z, s=3, edgecolor='')
plt.axhline(0, color="black")
plt.axvline(0, color="black")

#plt.imshow(img,extent=(-180, 180, -180, 180))

plt.savefig("RamachandranPLot_alldata.png", transparent=True)
'''
plt.hist2d(x, y, (1000, 1000), cmap=plt.cm.jet)
plt.colorbar()
'''









